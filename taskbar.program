#!/bin/zsh
init.values ()
{
	optnFocused=3
	optnOff=1
	scopeOld=""
	contadorOld=0
	baseOld=""
	workspaceFocusedOld=""
	windowFocusedOld=""
	xhookOld=""
	scopeOldPosition=""
}

main ()
{
	while true; do
		interval
		scopeNew="$(wmctrl -lx)"
		if [[ $scopeOld != $scopeNew ]]; then
			contador=$(wc -l <<< "$scopeNew")
			controller="scope"
			analysis.scope
			analysis.base
			modules
		else
			controller="base"
			analysis.base
		fi
	done || { interval; main }
}

analysis.scope ()
{
	unset labelsnew
	if [[ $contador -gt 1 ]]; then
		for (( i = 1; i <= $contador; i++ ))
		{
			if [[ ${${(f)scopeNew}[$i]} != ${${(f)scopeOld}[$i]} ]];then
				id=${${(s: :)${${(f)scopeNew}[$i]}}[1]}
				indice=$(( ${${(s: :)${${(f)scopeNew}[$i]}}[2]} + 1 ))
				eval workspace='$'w"$indice"
				title="${${${(s: :)${${(f)scopeNew}[$i]}}[4,-1]//$HOST/}//N\/A /}"
				unset program
	    		analysis.exceptions
	    		[[ -z $program ]] && program=${${${(s: :)${${(f)scopeNew}[$i]}}[3]//*\./}//-/}
				eval icon='$'$program
				[[ -z $icon ]] && eval icon=$default
				labelsnew[$i]="$indice $id $workspace $icon $program $title"
			else
				labelsnew[$i]=$(grep ${${(s: :)${${(f)scopeNew}[$i]}}[1]} $bd)
			fi
		}
		<<< ${(F)${(on)${labelsnew[@]}}} >| $bd
	elif [[ $contador -eq 1 ]]; then
		if [[ -z $scopeNew ]]; then
			contador=0
		else
			id=${${(s: :)${scopeNew}}[1]} 
			indice=$(( ${${(s: :)${scopeNew}}[2]} + 1 ))
			eval workspace='$'w"$indice"
			title="${${${(s: :)${scopeNew}}[4,-1]//$HOST/}//N\/A /}"
			unset program
			analysis.exceptions
			[[ -z $program ]] && program=${${${(s: :)${scopeNew}}[3]//*\./}//-/}
			eval icon='$'$program
			[[ -z $icon ]] && eval icon=$default
			<<< "$indice $id $workspace $icon $program $title" >| $bd
		fi
	else
		contador=0
	fi
	scopeNewPosition="$(< $bd)"
}

analysis.exceptions ()
{
	case "$title" in
		*"YouTube - "* ) program="YouTube";;
		*"Facebook - "* ) program=facebook;;
		*"the home for *NIX"* ) program="reddit";;
		*"reddit:"* ) program="reddit";;
		*"LinkedIn - "* ) program="linkedin";;
		*"Twitter -"* ) program="twitter";;
		*"GitHub - "* || *"odilonscoelho"* ) program="github";;
		*pulsemixer* ) program="pulsemixer";;
		*"- VIM"* ) program="vim";;
		*ranger* ) program="ranger";;
		*htop* ) program="htop";;
		*Netflix* ) program="Netflix";;
		WiFi* ) program="WiFiAudio";;
		*"youtube-dl"* ) 
			title=$(awk '{print $2,$7,$8}' <<< $title)
			program=${$(xwinfo -i $id)//-/};;
		*"- SpankBang -"* || *"SpankBang:"* || *"SpankBanger:"* ) 
			program="spankbang"
			title="Private!";;
		*"- XVIDEOS.COM -"* ) 
			program="spankbang"
			title="Private!";;
	esac
	title=${title//\-\ Google\ Chrome/}
	title=${title//\-\ qutebrowser/}
	title=${title//\(hdbkp\)\ \-\ Sublime\ Text\ \(UNREGISTERED\)/}
	title=${title//\-\ Sublime\ Text\ \(UNREGISTERED\)/}
	title=${title//\-\ YouTube/}
}

analysis.base ()
{
	if [[ $controller == "base" ]]; then
		baseNew="$(xprop -root _NET_ACTIVE_WINDOW _NET_CURRENT_DESKTOP)"
		if [[ $baseOld != $baseNew ]]; then
			workspaceFocused=$(( ${${(s: :)${(f)"${baseNew}"}[2]}[3]} + 1 ))
			if [[ $workspaceFocusedOld != $workspaceFocused ]]; then
				eval workspace='$'W"$workspaceFocused"
				echo "%{T$fontWS}%{F$colorWSForeground}%{B$colorWSBackground} $workspace%{T- B- F-} " >| $bk
				polybar-msg hook ws 1 > /dev/null
				interval.polybar
			fi
			windowFocused=${${(s: :)${(f)"${baseNew}"}[1]}[5,-1]}
			case "$(wc -c <<< $windowFocused)" in
				9 ) windowFocused="${${windowFocused}//0x/0x00}";;
				10 ) windowFocused="${${windowFocused}//0x/0x0}";;
			esac
			if [[ $windowFocusedOld != $windowFocused && $contador -gt 0 ]]; then
				polybar-msg hook x"$xhook" $optnUnFocused > /dev/null
				interval.polybar	
				xhookWorkspace=$(grep "$windowFocused" $bd| cut -d ' ' -f 1)
				xhook=$(grep --line-number "$windowFocused" $bd| cut -d ':' -f 1)
				if [[ $xhookWorkspace == $workspaceFocused ]]; then
					polybar-msg hook x"$xhook" $optnFocused > /dev/null
					interval.polybar 
				else
					polybar-msg hook x"$xhook" $optnUnFocused > /dev/null
					interval.polybar 
				fi
			else
				xhookWorkspace=$(grep "$windowFocused" $bd| cut -d ' ' -f 1)
				xhook=$(grep --line-number "$windowFocused" $bd| cut -d ':' -f 1)
			fi
			windowFocusedOld=$windowFocused
			workspaceFocusedOld=$workspaceFocused
			baseOld=$baseNew
		fi
	else
		xhookWorkspace=$(grep "$windowFocused" $bd| cut -d ' ' -f 1)
		xhook=$(grep --line-number "$windowFocused" $bd| cut -d ':' -f 1)
	fi
}

modules ()
{
	if [[ $contador -le $qtLabelMin ]]; then
		optnUnFocused=2
		if [[ $contadorOld -gt $qtLabelMin ]]; then
			for (( i = 1; i <= $contador; i++ )); do
				polybar-msg hook x"$i" $optnUnFocused > /dev/null
				interval.polybar
			done
		fi		
	else
		optnUnFocused=4
		if [[ $contadorOld -le $qtLabelMin ]]; then
			for (( i = 1; i <= $contador; i++ )); do
				polybar-msg hook x"$i" $optnUnFocused > /dev/null
				interval.polybar
			done
		fi
	fi
	if [[ $contador -gt 0 ]]; then
		for (( i=$(( $contador + 1 )); i <= $contadorOld; i++ ))
		{
		 	polybar-msg hook x"$i" $optnOff > /dev/null
		 	interval.polybar
		}
		for (( i=1; i <= $contador ; i++ ))
		{
			analysis.bool "$i"
			# Não houve alteração mas ela ganhou foco
			if [[ $alters == "false" && $focused == "true" && $focusedOld == "false" ]]; then
				polybar-msg hook x"$i" $optnFocused > /dev/null
				interval.polybar
			# Não houve alteração mas ela perdeu o foco
			elif [[ $alters == "false" && $focused == "false" && $focusedOld == "true" ]]; then
				polybar-msg hook x"$i" $optnUnFocused > /dev/null
				interval.polybar
			elif [[ $alters == "true" && $focused == "true" ]]; then
				polybar-msg	hook x"$i" $optnFocused > /dev/null
				interval.polybar
			elif [[ $alters == "true" && $focused == "false" ]]; then
				polybar-msg hook x"$i" $optnUnFocused > /dev/null
				interval.polybar
			elif [[ $contador -eq 0 ]]; then
				polybar-msg hook x"$i" $optnOff > /dev/null
				interval.polybar
			fi
		}
	else
		for (( i=1; i <= $contadorOld; i++ ))
		{
		 	polybar-msg hook x"$i" $optnOff > /dev/null 
		 	interval.polybar
		}
	fi
	contadorOld=$contador
	scopeOld=$scopeNew
	scopeOldPosition=$scopeNewPosition
	xhookOld=$xhook
}

analysis.bool ()
{
	if [[ $contador -gt 1 ]]; then
		[[ ${${(f)scopeOldPosition}[$1]} != ${${(f)scopeNewPosition}[$1]} ]] && alters="true" || alters="false"
		[[ $xhook == $1 ]] && focused="true" || focused="false"
		[[ $1 == $xhookOld ]] && focusedOld="true" || focusedOld="false"
		[[ $xhookWorkspace == $workspaceFocused ]] && workspaceFocusedStatus="true" || workspaceFocusedStatus="false"
	else
		[[ $scopeOldPosition != $scopeNewPosition ]] && alters="true" || alters="false"
		[[ $xhook == $1 ]] && focused="true" || focused="false"
		[[ $1 == $xhookOld ]] && focusedOld="true" || focusedOld="false"
		[[ $xhookWorkspace == $workspaceFocused ]] && workspaceFocusedStatus="true" || workspaceFocusedStatus="false"
	fi
}
